grammar SingleString;

start : '$' segments EOF;
segments: (S? segment)*;
segment: childSegment;

selector: nameSelector
    | wildcardSelector
    | sliceSelector
    | indexSelector;
nameSelector: STRING;
indexSelector: INT;
sliceSelector: (INT S?)? ':' S? (INT S?)? (':' (S? INT )?)?;
childSegment: bracketedSelection | ('.' (wildcardSelector | memberNameShorthand));
wildcardSelector: '*';

bracketedSelection: '[' S? selector (S? ',' S? selector)* S? ']';
memberNameShorthand: MEMBER_NAME;

MEMBER_NAME: [A-Za-z]+;
STRING: '"' (~["\\])* '"';
INT: [0-9]+ ;
S: [\u0020\u0009\u000A\u000D]+;