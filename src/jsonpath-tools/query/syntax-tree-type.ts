export enum JSONPathSyntaxTreeType {
    dollarToken = "DollarToken",
    atToken = "AtToken",
    starToken = "StarToken",
    questionMarkToken = "QuestionMarkToken",
    dotToken = "DotToken",
    doubleDotToken = "DoubleDotToken",
    commaToken = "CommaToken",
    colonToken = "ColonToken",
    doubleAmpersandToken = "DoubleAmpersandToken",
    doubleBarToken = "DoubleBarToken",
    exclamationMarkToken = "ExclamationMarkToken",
    doubleEqualsToken = "DoubleEqualsToken",
    exclamationMarkEqualsToken = "ExclamationMarkEqualsToken",
    lessThanEqualsToken = "LessThanEqualsToken",
    greaterThanEqualsToken = "GreaterThanEqualsToken",
    lessThanToken = "LessThanToken",
    greaterThanToken = "GreaterThanToken",
    trueToken = "TrueToken",
    falseToken = "FalseToken",
    nullToken = "NullToken",
    stringToken = "StringToken",
    numberToken = "NumberToken",
    nameToken = "NameToken",
    openingParanthesisToken = "OpeningParanthesisToken",
    closingParanthesisToken = "ClosingParanthesisToken",
    openingBracketToken = "OpeningBracketToken",
    closingBracketToken = "ClosingBracketToken",
    endOfFileToken = "EndOfFileToken",
    root = "Root",
    query = "Query",
    segment = "Segment",
    nameSelector = "NameSelector",
    wildcardSelector = "WildcardSelector",
    sliceSelector = "SliceSelector",
    indexSelector = "IndexSelector",
    filterSelector = "FilterSelector",
    orExpression = "OrExpression",
    andExpression = "AndExpression",
    notExpression = "NotExpression",
    paranthesisExpression = "ParanthesisExpression",
    comparisonExpression = "ComparisonExpression",
    filterQueryExpression = "FilterQueryExpression",
    functionExpression = "FunctionExpression",
    numberLiteral = "NumberLiteral",
    stringLiteral = "StringLiteral",
    booleanLiteral = "BooleanLiteral",
    nullLiteral = "NullLiteral"
}
