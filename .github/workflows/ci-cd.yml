name: Build, Test and Deploy

on:
  push:
    branches: ['**']
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps
      - name: Build @jsonpath-tools/jsonpath
        run: npm run build --workspace @jsonpath-tools/jsonpath
      - name: Build @jsonpath-tools/codemirror-lang-jsonpath
        run: npm run build --workspace @jsonpath-tools/codemirror-lang-jsonpath
      - name: Build @jsonpath-tools/jsonpath-editor-react
        run: npm run build --workspace @jsonpath-tools/jsonpath-editor-react
      - name: Build @jsonpath-tools/jsonpath-playground
        run: npm run build --workspace @jsonpath-tools/jsonpath-playground
      - name: Run linter
        run: npm run lint
      - name: Run tests
        run: npm run test --workspaces --if-present
      - name: Run end-to-end tests
        run: npm run test:e2e --workspaces --if-present
      - name: Build @jsonpath-tools/documentation
        run: |
          npm run typedoc --workspace @jsonpath-tools/documentation
          npm run build --workspace @jsonpath-tools/documentation
      - name: Upload @jsonpath-tools/jsonpath-playground artifact
        uses: actions/upload-artifact@v4
        with:
          name: jsonpath-playground-build
          path: apps/jsonpath-playground/dist/
          retention-days: 1
      - name: Upload @jsonpath-tools/documentation artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/documentation/.vitepress/dist
          retention-days: 1

  deploy:
    name: Deploy
    if: github.event_name == 'release'
    needs: build-test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Download @jsonpath-tools/jsonpath-playground artifact
        uses: actions/download-artifact@v4
        with:
          name: jsonpath-playground-build
          path: apps/jsonpath-playground/dist/
      - name: Deploy Packages to NPM Registry
        run: |
          npm publish --provenance --access public --workspace @jsonpath-tools/jsonpath
          npm publish --provenance --access public --workspace @jsonpath-tools/codemirror-lang-jsonpath
          npm publish --provenance --access public --workspace @jsonpath-tools/jsonpath-editor-react
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
      - name: Deploy @jsonpath-tools/jsonpath-playground to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{secrets.CLOUDFLARE_API_TOKEN}}
          accountId: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          command: pages deploy apps/jsonpath-playground/dist/ --project-name=jsonpath-playground --branch main
          gitHubToken: ${{secrets.GITHUB_TOKEN}}
      - name: Deploy @jsonpath-tools/documentation to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4